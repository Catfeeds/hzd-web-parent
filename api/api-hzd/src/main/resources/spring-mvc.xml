<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


	<context:component-scan base-package="com.hzcf.platform.api.controller" />
     <!-- 自定义jackson bean -->
    <bean id="objectMapper" class="com.hzcf.platform.common.cache.bean.JacksonBean"/>
    <mvc:annotation-driven>
    	<mvc:argument-resolvers>
			<bean class="com.hzcf.platform.api.annotation.RequestAttributeAnnotation" lazy-init="false" />
			 <bean class="com.hzcf.platform.api.annotation.RequestBodyFormResolver">
                <property name="mapper" ref="objectMapper"/>
            </bean>
		</mvc:argument-resolvers>
    </mvc:annotation-driven>
     
    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
            value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".jsp" />
    </bean>
  	      <!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->  
    <!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->  
    <mvc:resources location="/static/protocol/" mapping="/static/protocol/**" />  
    <mvc:resources location="/static/protocol/css/" mapping="/static/protocol/css/**" />  

    <mvc:resources location="/static/protocol/images/" mapping="/static/protocol/images/**" />  
 	 <mvc:resources location="/static/versions/" mapping="/static/versions/**" />  
 	
  	
  		 <!--配置拦截器, 多个拦截器,顺序执行 -->
    <mvc:interceptors>  
        <mvc:interceptor>  
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/rest/**" />
            <bean  class="com.hzcf.platform.interceptor.HandlerInterceptor"></bean>  
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    	  <mvc:interceptor>  
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/api/100/user/logon/**" />
            <bean  class="com.hzcf.platform.interceptor.LogonInterceptor"></bean>  
        </mvc:interceptor>
    
    </mvc:interceptors>
  	
<!--   	  支持返回json(避免IE在ajax请求时，返回json出现下载 )
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean> -->

  	
	<!-- 系统异常转换 -->  
    <bean class="com.hzcf.platform.framework.webmvc.interceptor.SystemHanlderExceptionResolver" />
    
    
    
    
</beans>
	
	