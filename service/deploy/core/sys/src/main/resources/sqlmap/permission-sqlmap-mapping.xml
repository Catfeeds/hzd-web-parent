<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.hzcf.platform.core.sys.data.Permission">
    <!--  
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache" readOnly="true" />
	-->
	<resultMap id="BaseResultMap" type="com.hzcf.platform.core.sys.data.Permission">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="href_url" property="href_url" jdbcType="VARCHAR" />
		<result column="target" property="target" jdbcType="VARCHAR" />
		<result column="icon" property="icon" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
		<result column="is_show" property="isShow" jdbcType="VARCHAR" />
		<result column="permission" property="permission" jdbcType="VARCHAR" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="create_by" property="createBy" jdbcType="INTEGER" />
		<result column="update_by" property="updateBy" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="logical_del" property="logicalDel" jdbcType="TINYINT" />
   
	</resultMap>
	
	
	
	<sql id="Base_Column_List">
		id as id,
		parent_id as parentId,
		parent_ids as parentIds, 
		name as name,
		href_url as href_url,
		target as target,
		icon as icon,
		sort as sort,
		is_show as isShow,
		permission as permission,
		remarks as remarks,
		create_by as createBy,
		update_by as updateBy,
		create_time as createTime,
		update_time as updateTime,
		logical_del as logicalDel
	</sql>
	
	
	<sql id="Base_Where_Clause">
		<where>
			<trim prefixOverrides="and">
				<if test="id != null"> and id = #{id}</if>
				<if test="name != null">and name = #{name}</if>
				<if test="href_url != null">and href_url = #{href_url}</if>
				<if test="permission != null">and permission = #{permission}</if>
				<if test="logicalDel != null">and logical_del = #{logicalDel}</if>		
				<!-- 模糊查询 --> 
				<if test="nameLike != null">and name like CONCAT("%",#{nameLike},"%")</if>
				<if test="permissionLike != null">and permission like CONCAT("%",#{permissionLike},"%")</if>
			</trim>
		</where>
		
	</sql>
	
	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long" parameterType="java.util.Map">
		select count(id)
		from sys_permission
		<include refid="Base_Where_Clause" />
	</select>
	
	<!-- 查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from sys_permission
		<include refid="Base_Where_Clause" />
	</select>
	 
	<select id="queryById" resultMap="BaseResultMap" parameterType="int">
		SELECT
		id,
		parent_id ,
		parent_ids , 
		name ,
		href_url ,
		target ,
		icon ,
		sort ,
		is_show ,
		permission ,
		remarks ,
		create_by ,
		update_by ,
		create_time ,
		update_time ,
		logical_del 
		FROM sys_permission
		WHERE id = #{id}
	</select>
	<select id="getListByRoleId" resultMap="BaseResultMap" parameterType="int">
		SELECT
        id,
		parent_id ,
		parent_ids , 
		name ,
		href_url ,
		target ,
		icon ,
		sort ,
		is_show ,
		permission ,
		remarks ,
		create_by ,
		update_by ,
		create_time ,
		update_time ,
		logical_del 
		FROM sys_permission
		
	  WHERE 
	   id IN 
	  (SELECT 
	    permission_id 
	  FROM
	    sys_role_permission 
	  WHERE role_id = #{role_id})
		
	</select>
	<select id="getListByUserId" resultMap="BaseResultMap" parameterType="int">
		SELECT
        id,
		parent_id ,
		parent_ids , 
		name ,
		href_url ,
		target ,
		icon ,
		sort ,
		is_show ,
		permission ,
		remarks ,
		create_by ,
		update_by ,
		create_time ,
		update_time ,
		logical_del 
		FROM sys_permission
	    WHERE  id IN 
	    (SELECT 
	       permission_id 
	     FROM
	      sys_role_permission 
	    WHERE  logical_del=0 and role_id IN 
	      (SELECT 
	        role_id 
	     FROM
	      sys_user_role 
	    WHERE user_id = #{user_id} and  logical_del=0))
	</select>
	
	<select id="getListByUserloginName" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
        id,
		parent_id ,
		parent_ids , 
		name ,
		href_url ,
		target ,
		icon ,
		sort ,
		is_show ,
		permission ,
		remarks ,
		create_by ,
		update_by ,
		create_time ,
		update_time ,
		logical_del 
		FROM sys_permission
	    WHERE TYPE ='permission' 
	    AND id IN 
	    (SELECT 
	       permission_id 
	     FROM
	      sys_role_permission 
	    WHERE  logical_del=0 and role_id IN 
	      (SELECT 
	        role_id 
	     FROM
	      sys_user_role 
	    WHERE login_name = #{loginName} and   logical_del=0))
	</select>
	
  
    <select id="getAll" resultMap="BaseResultMap">
		SELECT
        id,
		parent_id ,
		parent_ids , 
		name ,
		href_url ,
		target ,
		icon ,
		sort ,
		is_show ,
		permission ,
		remarks ,
		create_by ,
		update_by ,
		create_time ,
		update_time ,
		logical_del 
		FROM sys_permission  where logical_del=0
	</select>
	
	<!-- 根据ID查询 -->
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_permission
		where id = #{id}
	</select>
	
	<!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="java.util.List">
		delete from sys_permission
		where id = #{id} 
		<!-- <foreach collection="list" item="idList"  open="(" separator="," close=")">  
        	#{idList}  
     	</foreach>   -->
	</delete> 
	
	<!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from sys_permission
		<include refid="Base_Where_Clause" />
	</delete>

	<!-- 添加 -->	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="com.hzcf.platform.core.sys.data.Permission">
		insert into sys_permission(
		  id, 
		  parent_id ,
		  parent_ids , 
		  name ,
		  href_url ,
		  target ,
		  icon ,
		  sort ,
		  is_show ,
		  permission ,
		  remarks ,
		  create_by ,
		  update_by ,
		  create_time ,
		  update_time ,
		  logical_del  
		)
		values (
			#{id}, 
			#{parentId},
			#{parentIds},
			#{name},
			#{href_url}, 
			#{target}, 
			#{icon},
			#{sort}, 
			#{isShow}, 
			#{permission}, 
			#{remarks},
			#{createBy}, 
			#{updateBy},
			#{createTime},
			#{updateTime},
			#{logicalDel}
		)
	</insert>
	
	<!-- 通过ID更新 -->
	<update id="updateByIdSelective" parameterType="com.hzcf.platform.core.sys.data.Permission">
		update sys_permission
		<set>
			<if test="name != null">name = #{name},</if>
			<if test="href_url != null">href_url = #{href_url},</if>
			<if test="target != null">target = #{target},</if>
			<if test="icon!= null">icon= #{icon},</if>
			<if test="isShow != null">is_show = #{isShow},</if>
			<if test="sort != null">sort = #{sort},</if>
			<if test="permission != null">permission = #{permission},</if>
			<if test="remarks != null">remarks = #{remarks},</if>
			<if test="updateTime != null">update_time = #{updateTime},</if>
			<if test="updateBy != null">update_by = #{updateBy},</if>
			<if test="logicalDel != null">logical_del = #{logicalDel},</if>
		</set>
		where id = #{id}
	</update>
	
	<update id="updateById" parameterType="com.hzcf.platform.core.sys.data.Permission">
		update sys_permission
		<set>
			<if test="name != null">name = #{name},</if>
			<if test="href_url != null">href_url = #{href_url},</if>
			<if test="target != null">target = #{target},</if>
			<if test="icon!= null">icon= #{icon},</if>
			<if test="isShow != null">is_show = #{isShow},</if>
			<if test="sort != null">sort = #{sort},</if>
			<if test="permission != null">permission = #{permission},</if>
			<if test="remarks != null">remarks = #{remarks},</if>
			<if test="updateTime != null">update_time = #{updateTime},</if>
			<if test="updateBy != null">update_by = #{updateBy},</if>
			<if test="logicalDel != null">logical_del = #{logicalDel},</if>
		</set>
		where id = #{id}
	</update>
	
	<select id="FINDLIST" resultMap="BaseResultMap">
    
        select * from sys_permission 
         <include refid="Base_Where_Clause" />
          order by id desc  
          limit #{pageNo},#{pageSize}
    
    </select>
    
    <select id="FINDLIST_COUNT" resultType="int">
   
        select count(id) from sys_permission
        <include refid="Base_Where_Clause" />
  
    </select>
    
    
    <select id="ROLE_NOTEXIST_FINDLIST" resultMap="BaseResultMap">
    
        select * from sys_permission 
         where id not in (select permission_id from sys_role_permission where role_id=#{roleId})
          order by id desc  
          limit #{pageNo},#{pageSize}
    
    </select>
    
    <select id="ROLE_NOTEXIST_FINDLIST_COUNT" resultType="Long">
   
        select count(id) from sys_permission 
        where id not in (select permission_id from sys_role_permission where role_id=#{roleId})
  
    </select>
    
	<resultMap id="menusMap" type="String">
		<result column="href_url" property="href_url" jdbcType="VARCHAR" />
	</resultMap>
	
	 <select id="getMenuListByUserId"  resultMap="menusMap" parameterType="int">
	    <![CDATA[
	   SELECT  DISTINCT href_url
	
		FROM sys_permission
		 WHERE logical_del=0 and href_url <>'' and id IN 
	    (SELECT 
	       permission_id 
	     FROM
	      sys_role_permission 
	    WHERE   role_id IN 
	      (SELECT 
	        role_id 
	     FROM
	      sys_user_role 
	    WHERE user_id =  #{user_id}   ))  
	     ]]> 
	</select>
	
	<resultMap id="permissionsMap" type="String">
			<result column="permission" property="permission" jdbcType="VARCHAR" />
	</resultMap>
	
    <select id="getPermissionListByUserId"  resultMap="permissionsMap" parameterType="int">
	 <![CDATA[
	SELECT
        
		DISTINCT permission 
	
		FROM sys_permission
	    WHERE  logical_del=0 and  permission<>'' and id IN 
	    (SELECT 
	       permission_id 
	     FROM
	      sys_role_permission 
	    WHERE  logical_del=0 and role_id IN 
	      (SELECT 
	        role_id 
	     FROM
	      sys_user_role 
	    WHERE user_id = #{user_id}))
		  ]]> 
	</select>
	 
</mapper>

