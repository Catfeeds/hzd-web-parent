<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzcf.platform.core.user.data.UserDict" >
  <resultMap id="BaseResultMap" type="UserDict" >
    <result column="dict_id" property="dictId" jdbcType="VARCHAR" />
    <result column="dict_type" property="dictType" jdbcType="VARCHAR" />
    <result column="dict_text" property="dictText" jdbcType="VARCHAR" />
    <result column="dict_value" property="dictValue" jdbcType="VARCHAR" />
    <result column="dict_sort" property="dictSort" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="dict_path" property="dictPath" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    dict_id, dict_type, dict_text, dict_value, dict_sort,pid,dict_path
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_dict
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </select>

  <select id="selectList" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from user_dict  where  dict_value !='' and pid is null

  </select>

  <select id="selectJkytList" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    <!-- from user_dict where   pid  !='' --> 
    from user_dict where dict_path='LOANUSE' and status = 0 
	order by dict_id
  </select>
  
  <select id="selectRelationList" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from user_dict where dict_path='RELATION' 
	order by dict_id
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_dict
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="UserDict" >
    insert into user_dict (dict_id, dict_type, dict_text, 
      dict_value, dict_sort,dict_path)
    values (#{dictId,jdbcType=VARCHAR}, #{dictType,jdbcType=VARCHAR}, #{dictText,jdbcType=VARCHAR}, 
      #{dictValue,jdbcType=VARCHAR}, #{dictSort,jdbcType=INTEGER}, #{dictPath,jdbcType=INTEGER}))
  </insert>
  <insert id="insertSelective" parameterType="UserDict" >
    insert into user_dict
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dictId != null" >
        dict_id,
      </if>
      <if test="dictType != null" >
        dict_type,
      </if>
      <if test="dictText != null" >
        dict_text,
      </if>
      <if test="dictValue != null" >
        dict_value,
      </if>
      <if test="dictSort != null" >
        dict_sort,
      </if>
      <if test="dictPath != null" >
        dict_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dictId != null" >
        #{dictId,jdbcType=VARCHAR},
      </if>
      <if test="dictType != null" >
        #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="dictText != null" >
        #{dictText,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null" >
        #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictSort != null" >
        #{dictSort,jdbcType=INTEGER},
      </if>
      <if test="dictPath != null" >
        #{dictPath,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="UserDict" >
    update user_dict
    <set >
      <if test="dictType != null" >
        dict_type = #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="dictText != null" >
        dict_text = #{dictText,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null" >
        dict_value = #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictSort != null" >
        dict_sort = #{dictSort,jdbcType=INTEGER},
      </if>
      <if test="dictSort != null" >
        dict_path = #{dictPath,jdbcType=INTEGER},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="UserDict" >
    update user_dict
    set dict_type = #{dictType,jdbcType=VARCHAR},
      dict_text = #{dictText,jdbcType=VARCHAR},
      dict_value = #{dictValue,jdbcType=VARCHAR},
      dict_sort = #{dictSort,jdbcType=INTEGER},
        dict_path = #{dictPath,jdbcType=INTEGER}
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </update>
</mapper>