<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
				http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-lazy-init="true">
  
	<description>Shiro Configuration</description>
	<import resource="cache.xml"/>
    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:/redis_application.properties" />
	
   
    
	<!-- 定义 Shiro 主要业务对象 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="systemAuthorizingRealm" />
		<property name="cacheManager" ref="redisCacheManager" />
		<!-- 注入session管理器 -->
		<property name="sessionManager" ref="webSessionManager" />
		<!-- 记住我 -->
		<property name="rememberMeManager" ref="rememberMeManager"/>
	
	</bean>
	
  
	<!-- 安全认证过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
	    <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/login" />
		<!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 -->
		<property name="successUrl" value="/index" />
		<!-- 通过unauthorizedUrl指定没有权限操作时跳转页面-->
		<property name="unauthorizedUrl" value="/refuse.jsp" />
	
		<property name="filterChainDefinitions">
			<value>
			    <!-- /** = anon所有url都可以匿名访问 -->
			    /sysexit= anon
				<!-- 请求 logout.action地址，shiro去清除session-->
				/logout= logout
				<!-- 配置记住我或认证通过可以访问的地址 -->
				/** = user
				<!--  /index  = user-->
				<!-- /** = authc 所有url都必须认证通过才可以访问-->
				/** = authc
		 	</value>
		</property>
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行  启用shiro 权限角色注解 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<!-- 开启shiro注解支持 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
     <property name="securityManager" ref="securityManager"/>
   </bean>
	
	<!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
	
    <bean id="systemAuthorizingRealm" class="com.hzcf.platform.mgr.sys.shiro.CustomRealm">
     <property name="credentialsMatcher" ref="credentialsMatcher"/>
	<!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
	</bean>
		
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	

      <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
	    class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
	   <property name="hashAlgorithmName" value="md5" />
	   <property name="hashIterations" value="1" />
    </bean>
	
	
	<!-- 用户授权信息Cache, 采用EhCache 
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:cache/ehcache.xml"/>
	</bean>
	-->
     <!--配置shiro的sessionManager-->  
     <bean id="webSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
         <property name="sessionDAO" ref="redisSessionDAO"></property>  
     </bean>  
	
	
    <!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 
	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie"> --> 
        <!-- cookie的name,对应的默认是 JSESSIONID -->  
       <!--  <constructor-arg name="name" value="shiro_s_u_i_d" />   --> 
        <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->  
      <!--   <property name="path" value="/" />  
        <property name="httpOnly" value="true"/>  
    </bean>  --> 
	<!-- 记住我cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- rememberMe是cookie的名字 -->
		<constructor-arg value="rememberMe" />
		<!-- 记住我cookie生效时间30天 -->
		<property name="maxAge" value="2592000" />
	</bean>
	<bean id="sessionCache" class="com.exiao.platform.framework.webmvc.session.SessionCacheImpl">
		 <property name="cache" ref="cache" />
	</bean>
	   <!--redis配置-->
  
	<!--自定义cacheManager-->
    <bean id="redisCache" class="com.hzcf.platform.mgr.sys.shiro.redis.RedisCache">
        <property name="cache" ref="cache"></property> 
    </bean>  
   
    <bean id="redisCacheManager" class="com.hzcf.platform.mgr.sys.shiro.redis.RedisCacheManager">
           <property name="cache" ref="cache"></property> 
    </bean>
    
    <!-- Redis session dao -->
   <!--redisSessionDAO继承实现了org.apache.shiro.session.mgt.eis.SessionDAO的AbstractSessionDAO-->
    <bean id="redisSessionDAO" class="com.hzcf.platform.mgr.sys.shiro.redis.RedisSessionDAO">
        <property name="cache" ref="cache"></property>
    </bean> 

</beans>